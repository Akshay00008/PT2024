{"version":3,"file":"static/js/152.e6453127.chunk.js","mappings":"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","sources":["component/AlternativeTableRow.jsx","component/DescTooltip.jsx","component/EntangledFGTableRow.jsx","component/PartsPreview.jsx"],"sourcesContent":["import { Checkbox, TableCell, TableRow, TextField } from '@mui/material';\nimport React, { useState } from 'react';\n\nconst AlternativeTableRow = ({\n  altpart,\n  lockAlternative,\n  handleAlternatePartsDetails,\n}) => {\n  const [checked, setChecked] = useState(false);\n  const [error, setError] = useState(false);\n  const [errorText, setErrorText] = useState('');\n  const handleValidate = (e, altcbtqoh) => {\n    if (e.target.value > parseInt(altcbtqoh)) {\n      setError(true);\n      setErrorText(`Enter <= ${altcbtqoh}`);\n    } else {\n      setError(false);\n      setErrorText('');\n    }\n  };\n  return (\n    <TableRow\n      key={altpart?.name}\n      sx={{\n        '&:last-child td, &:last-child th': { border: 0 },\n      }}\n    >\n      <TableCell align='center'>\n        <Checkbox\n          checked={checked}\n          onChange={e => setChecked(e.target.checked)}\n          disabled={lockAlternative}\n        />\n        {altpart?.Alternate_item}\n      </TableCell>\n      <TableCell align='center'>{altpart?.Alt_Grp_Rnk}</TableCell>\n      <TableCell align='center'>{altpart?.cost}</TableCell>\n      <TableCell align='center'>{altpart?.qpa}</TableCell>\n      <TableCell align='center'>{altpart?.QOH}</TableCell>\n      <TableCell align='center'>{altpart?.allocated_qty}</TableCell>\n      <TableCell align='center'>\n        <TextField\n          disabled={lockAlternative || !checked}\n          error={error}\n          value={altpart?.allocated_ctb}\n          onChange={e => {\n            handleAlternatePartsDetails(e, altpart?.Alternate_item);\n            handleValidate(e, altpart?.QOH / altpart?.qpa);\n          }}\n          sx={{ width: '120px' }}\n          placeholder=''\n          size='small'\n          helperText={error && errorText}\n        />\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default AlternativeTableRow;\n","import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\n\nconst LightTooltip = styled(({ className, ...props }) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: \"transparent\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    boxShadow: \"0px 3px 6px #0000001F\",\n    zIndex:'1'\n  },\n}));\n\nconst DescTooltip = ({ children, data }) => {\n  return (\n    <LightTooltip\n      title={\n        <div\n          style={{\n            backgroundColor: \"#fff\",\n            color: \"#000\",\n            margin: \"-5px -8px\",\n            boxShadow: \"none\",\n            borderRadius: \"5px\",\n            fontWeight: \"600\",\n            padding: \"0px 5px\",\n          }}\n        >\n          {data}\n        </div>\n      }\n      placement=\"right\"\n    >\n      {children}\n    </LightTooltip>\n  );\n};\n\nexport default DescTooltip;\n","import { TableCell, TableRow, TextField } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\n\nconst EntangledFGTableRow = ({\n  entfg,\n  lockAlternative,\n  handleEntangledFGDetails,\n  remainingQoh,\n  QPA,\n}) => {\n  const [error, setError] = useState(false);\n  const [errorText, setErrorText] = useState('');\n\n  const handleValidate = val => {\n    let regexPattern = /^-?[0-9]+$/;\n    if (regexPattern.test(val)) {\n      setError(false);\n      setErrorText('');\n      console.log('int');\n    }\n    if (!regexPattern.test(val) || val > entfg.req_ctb) {\n      setError(true);\n      setErrorText(`Invalid`);\n      console.log('float');\n    }\n  };\n  return (\n    <TableRow\n      sx={{\n        '&:last-child td, &:last-child th': { border: 0 },\n      }}\n    >\n      <TableCell align='center'>{entfg?.FG}</TableCell>\n      <TableCell align='center'> {entfg?.ctb} </TableCell>\n      <TableCell align='center'> {entfg?.potential_ctb} </TableCell>\n      <TableCell align='center'>{entfg?.req_ctb}</TableCell>\n      <TableCell align='center'>{QPA}</TableCell>\n      <TableCell align='center'> {entfg?.allocated_qty} </TableCell>\n      <TableCell align='center'>\n        <TextField\n          type='text'\n          disabled={lockAlternative}\n          error={error}\n          helperText={error && errorText}\n          value={entfg?.ctb_qoh}\n          onChange={e => {\n            handleEntangledFGDetails(e, entfg?.FG);\n            handleValidate(e.target.value);\n          }}\n          sx={{ width: '135px' }}\n          placeholder=''\n          size='small'\n        />\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default EntangledFGTableRow;\n","import CircleIcon from \"@mui/icons-material/Circle\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport ReplayIcon from \"@mui/icons-material/Replay\";\nimport WarningIcon from \"@mui/icons-material/Warning\";\nimport {\n  Collapse,\n  Paper,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n} from \"@mui/material\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport axios from \"axios\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { BaseUrl } from \"../constant/BaseUrl\";\nimport AlternativeTableRow from \"./AlternativeTableRow\";\nimport EntangledFGTableRow from \"./EntangledFGTableRow\";\nimport { FilterContext } from \"../context/FilterContext\";\nimport DescTooltip from \"./DescTooltip\";\nimport { useHistory } from \"react-router-dom\";\n\nconst PartsPreview = ({ partDetails, allParts, setAllParts }) => {\n  const history = useHistory();\n  const { filterState, setFilterState } = useContext(FilterContext);\n  const [open, setOpen] = useState(false);\n  const [lockAlternative, setLockAlternative] = useState(\n    partDetails?.resolved_flag\n  );\n  const [alterNativeParts, setAlterNativeParts] = useState([]);\n\n  const [entangledFGData, setEntangledFGData] = useState([]);\n  const [AllocatedCTB, setAllocatedCTB] = useState(\n    partDetails?.allocated_item_ctb\n  );\n  const [partQOH, setPartQOH] = useState(partDetails?.QOH);\n  const [resolved_flag, setResolved_flag] = useState(\n    partDetails?.resolved_flag\n  );\n\n  const [AllocatedCTBAlternative, setAllocatedCTBAlternative] = useState(\n    partDetails?.total_alt_item_allocated_ctb\n  );\n\n  const [reAllocatedQuantity, setReAllocatedQuantity] = useState(\n    !partDetails?.entanglment_flag\n      ? partDetails?.allocated_item_ctb * partDetails?.QPA\n      : entangledFGData.find((item) => item.FG === partDetails.Parentitem)\n          ?.allocated_qty\n  );\n  const [qntySum, setQntySum] = useState(0);\n  const [collapseLoading, setCollapseLoading] = useState(false);\n\n  const getAlternativeAndEntangled = () => {\n    setCollapseLoading(true);\n    setEntangledFGData([]);\n    setAlterNativeParts([]);\n    setQntySum(0);\n    setPartQOH(partDetails?.QOH);\n    axios\n      .post(\n        `${BaseUrl}${filterState?.location}/alternate-entangled/${filterState?.username}`,\n        {\n          FG: String(partDetails?.Parentitem),\n          item: String(partDetails?.item),\n        }\n      )\n      .then((res) => {\n        // console.log(res.data);\n        if (res?.data?.msg) {\n          alert(res?.data?.msg);\n          setOpen(false);\n        }\n        setEntangledFGData(res.data?.entagled_parents_details);\n        setAlterNativeParts(res.data?.alternate_details);\n        if (!partDetails?.entanglment_flag) {\n          setQntySum(partDetails?.allocated_item_ctb * partDetails?.QPA);\n        }\n        if (res.data?.entagled_parents_details.length > 0) {\n          let parentfg = res.data?.entagled_parents_details.find(\n            (item) => item.FG === partDetails.Parentitem\n          );\n          setReAllocatedQuantity(parentfg?.allocated_qty);\n          setAllocatedCTB(\n            partDetails?.entanglment_flag\n              ? parseInt(parentfg?.ctb_qoh)\n              : partDetails?.inv_ctb\n          );\n          setQntySum(\n            res?.data?.entagled_parents_details.reduce((sum, fg) => {\n              return sum + parseInt(fg.allocated_qty);\n            }, 0)\n          );\n        }\n        setCollapseLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  useEffect(() => {\n    setPartQOH(qntySum + partQOH);\n  }, [qntySum]);\n\n  const handleAlternatePartsDetails = (e, partname) => {\n    setAlterNativeParts(\n      alterNativeParts.map((part) =>\n        part.name === partname\n          ? {\n              ...part,\n              allocated_ctb: e.target.value,\n              allocated_qty: e.target.value * part.qpa,\n            }\n          : part\n      )\n    );\n  };\n  useEffect(() => {\n    setAllocatedCTBAlternative(\n      alterNativeParts.reduce((sum, altpart) => {\n        return sum + parseInt(altpart.qohcbt);\n      }, 0)\n    );\n  }, [alterNativeParts]);\n\n  const handleEntangledFGDetails = (e, fgname) => {\n    setEntangledFGData(\n      entangledFGData.map((entfg) =>\n        entfg.FG === fgname\n          ? {\n              ...entfg,\n              ctb_qoh: e.target.value,\n              allocated_qty: e.target.value * partDetails.QPA,\n            }\n          : entfg\n      )\n    );\n  };\n\n  const [allocatedQntEntangled, setAllocatedQntEntangled] = useState(null);\n  const [remainingQoh, setRemainingQoh] = useState(0);\n\n  useEffect(() => {\n    setAllocatedQntEntangled(\n      entangledFGData.reduce((sum, entpart) => {\n        return sum + parseInt(entpart.allocated_qty);\n      }, 0)\n    );\n  }, [entangledFGData]);\n\n  useEffect(() => {\n    const getData = setTimeout(() => {\n      if (!partDetails?.entanglment_flag) {\n        setRemainingQoh(parseInt(partQOH) - parseInt(reAllocatedQuantity));\n      } else {\n        setRemainingQoh(parseInt(partQOH) - parseInt(allocatedQntEntangled));\n      }\n    }, 1000);\n\n    return () => clearTimeout(getData);\n  }, [allocatedQntEntangled, partQOH, reAllocatedQuantity]);\n\n  const onClickLockKey = (partname) => {\n    setAllParts(\n      allParts.map((part) =>\n        part.item === partname\n          ? {\n              ...part,\n              resolved_flag: true,\n              QOH: remainingQoh,\n              allocated_item_ctb: AllocatedCTB,\n              total_alt_item_allocated_ctb: AllocatedCTBAlternative,\n              total_item_alt_item_allocated_ctb:\n                parseInt(AllocatedCTB) + parseInt(AllocatedCTBAlternative),\n            }\n          : part\n      )\n    );\n    setResolved_flag(true);\n  };\n\n  const getFormatedDate = () => {\n    let newdate = new Date().toLocaleString(\"en-GB\").split(\",\");\n    let mdate = newdate[0].split(\"/\");\n    return mdate[2] + \"-\" + mdate[1] + \"-\" + mdate[0] + newdate[1];\n  };\n\n  const [updatedPartDetails, setUpdatedPartDetails] = useState(partDetails);\n\n  useEffect(() => {\n    setUpdatedPartDetails({\n      ...updatedPartDetails,\n      resolved_flag: true,\n      QOH: remainingQoh,\n      allocated_item_ctb: AllocatedCTB,\n      total_alt_item_allocated_ctb: AllocatedCTBAlternative,\n      total_item_alt_item_allocated_ctb:\n        parseInt(AllocatedCTB) + parseInt(AllocatedCTBAlternative),\n    });\n  }, [AllocatedCTB, remainingQoh, AllocatedCTBAlternative]);\n\n\n  const [lockLoading, setLockLoading] = useState(false);\n\n  const SendUpdatedPartDetails = (\n    updatedpart,\n    updatedalternates,\n    updatedentangled\n  ) => {\n    setLockLoading(true);\n    // console.log({\n    //   item_QOH: {\n    //     item: partDetails.item,\n    //     QOH: remainingQoh,\n    //     oldQOH: partQOH,\n    //     newQOH: remainingQoh,\n    //     deltaQOH: remainingQoh - partQOH,\n    //   },\n    //   FG_item: {\n    //     ...updatedpart,\n    //     alternate_details: updatedalternates,\n    //     entagled_parents_details: updatedentangled,\n    //   },\n    //   summary: {\n    //     parent_item: partDetails.Parentitem,\n    //     lastUpdated: getFormatedDate(),\n    //   },\n    // });\n    axios\n      .post(\n        `${BaseUrl}${filterState?.location}/updateQOH/${filterState?.username}`,\n        {\n          item_QOH: {\n            item: partDetails.item,\n            QOH: remainingQoh,\n            oldQOH: partQOH,\n            newQOH: remainingQoh,\n            deltaQOH: remainingQoh - partQOH,\n          },\n          FG_item: {\n            ...updatedpart,\n            alternate_details: updatedalternates,\n            entagled_parents_details: updatedentangled,\n          },\n          summary: {\n            parent_item: partDetails.Parentitem,\n            lastUpdated: getFormatedDate(),\n          },\n        }\n      )\n      .then((res) => {\n        console.log(res.data);\n        setLockLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleUpdatedFGs = (item) => {\n    const fgarray = filterState.FGs;\n    if (!fgarray.includes(item)) {\n      fgarray.push(item);\n    }\n    setFilterState({ ...filterState, FGs: fgarray });\n  };\n\n  const [error, setError] = useState(false);\n  const [errorText, setErrorText] = useState(\"\");\n\n  const handleValidate = (val) => {\n    let regexPattern = /^-?[0-9]+$/;\n    if (regexPattern.test(val)) {\n      setError(false);\n      setErrorText(\"\");\n    }\n    if (!regexPattern.test(val)) {\n      setError(true);\n      setErrorText(`Invalid`);\n    }\n  };\n\n  const goSubAssemblyPage = (part) => {\n    localStorage.setItem(\"PTNo\", part);\n    history.push(\"/sub-assembly\");\n  };\n\n  return (\n    <Paper\n      sx={{\n        width: \"100%\",\n        padding: \" 15px 20px\",\n        overflow: \"hidden\",\n        boxShadow: \"0px 3px 6px #0000001F\",\n        borderRadius: \"5px\",\n      }}\n    >\n      <div\n        id={partDetails?.item + \"\"}\n        style={{ display: \"flex\", alignItems: \"center\", gap: \"15px\" }}\n      >\n        <div\n          onClick={() => {\n            if (open) {\n              setOpen(false);\n              setPartQOH(partDetails?.QOH);\n            } else {\n              getAlternativeAndEntangled();\n              setOpen(true);\n            }\n          }}\n          style={{\n            width: \"100%\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            cursor: \"pointer\",\n          }}\n        >\n          <div\n            style={{\n              fontSize: \"16px\",\n              fontWeight: 600,\n            }}\n          >\n            <DescTooltip data={partDetails?.description}>\n              <span>{partDetails?.item}</span>\n            </DescTooltip>\n          </div>\n          <div\n            style={{\n              fontSize: \"16px\",\n            }}\n          >\n            Allocated CTB : (Part: {AllocatedCTB}, Alternate:{\" \"}\n            {AllocatedCTBAlternative}, Total:{\" \"}\n            {parseInt(AllocatedCTB) + parseInt(AllocatedCTBAlternative)})\n          </div>\n          <div\n            style={{\n              // flex: 1,\n              fontSize: \"16px\",\n            }}\n          >\n            QOH : {partDetails?.QOH}\n          </div>\n          <div\n            style={{\n              // flex: 1.5,\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              alignItems: \"center\",\n            }}\n          >\n            <Stack sx={{ alignItems: \"center\" }} direction=\"row\" spacing={3}>\n              {resolved_flag ? (\n                <CircleIcon sx={{ color: \"#34A853\" }} />\n              ) : (\n                <>\n                  {partDetails?.deficient_flag && (\n                    <CircleIcon sx={{ color: \"#EA4335\" }} />\n                  )}\n                  {partDetails?.entanglment_flag && (\n                    <CircleIcon sx={{ color: \"#EA8600\" }} />\n                  )}\n                </>\n              )}\n\n              <div\n                style={{\n                  cursor: \"pointer\",\n                  backgroundColor: \"#0077B6\",\n                  color: \"#fff\",\n                  borderRadius: \"50%\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                }}\n              >\n                {open ? <ExpandLess /> : <ExpandMore />}\n              </div>\n              {collapseLoading && <CircularProgress color=\"inherit\" />}\n            </Stack>\n          </div>\n        </div>\n        {/* {partDetails?.alternate_flag && (\n          <div\n            onClick={() => goSubAssemblyPage(partDetails?.item)}\n            style={{\n              padding: \"1px 5px\",\n              fontSize: \"15px\",\n              fontWeight: \"600\",\n              backgroundColor: \"#EA4335BF\",\n              color: \"#fff\",\n              borderRadius: \"5px\",\n              cursor: \"pointer\",\n            }}\n          >\n            A\n          </div>\n        )} */}\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          {lockAlternative ? (\n            <div\n              onClick={() => {\n                if (open) {\n                  setLockAlternative(false);\n                  // onClickLockKey(partDetails?.item);\n                }\n              }}\n              style={{\n                height: \"26px\",\n                padding: \"3px\",\n                cursor: open ? \"pointer\" : \"text\",\n                backgroundColor: \"#0077B6\",\n                color: \"#fff\",\n                display: \"flex\",\n                alignItems: \"center\",\n                borderRadius: \"3px\",\n              }}\n            >\n              <LockOutlinedIcon sx={{ width: \"20px\", height: \"20px\" }} />\n            </div>\n          ) : (\n            <div\n              onClick={() => {\n                if (open) {\n                  setLockAlternative(true);\n                  onClickLockKey(partDetails?.item);\n                  // handleAlllockedPartsData(updatedPartDetails);\n                  SendUpdatedPartDetails(\n                    updatedPartDetails,\n                    alterNativeParts,\n                    entangledFGData\n                  );\n                  handleUpdatedFGs(partDetails?.Parentitem);\n                  setOpen(false);\n                }\n              }}\n              style={{\n                height: \"26px\",\n                padding: \"3px\",\n                cursor: open ? \"pointer\" : \"text\",\n                backgroundColor: \"#fff\",\n                color: \"#0077B6\",\n                display: \"flex\",\n                alignItems: \"center\",\n                borderRadius: \"3px\",\n                border: \"1px solid #0077b6\",\n              }}\n            >\n              <LockOutlinedIcon sx={{ width: \"20px\", height: \"20px\" }} />\n            </div>\n          )}\n          {lockLoading && (\n            <CircularProgress color=\"inherit\" sx={{ marginLeft: \"20px\" }} />\n          )}\n        </div>\n      </div>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        {open && (\n          <>\n            {alterNativeParts?.length > 0 ||\n              (!partDetails?.entanglment_flag && (\n                <Paper\n                  sx={{\n                    width: \"100%\",\n                    marginTop: \"15px\",\n                    overflow: \"hidden\",\n                    boxShadow: \"none\",\n                    border: \"1px solid #9F9F9F\",\n                    borderRadius: \"5px\",\n                  }}\n                >\n                  <div\n                    style={{\n                      padding: \"15px\",\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                    }}\n                  >\n                    <div style={{ color: \"#EA4335\", fontSize: \"15px\" }}>\n                      Choose alternative\n                    </div>\n                    {parseInt(AllocatedCTB) +\n                      parseInt(AllocatedCTBAlternative) >\n                      partDetails?.req_ctb && (\n                      <div\n                        style={{\n                          color: \"red\",\n                          fontSize: \"14px\",\n                          fontWeight: \"500\",\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          padding: \"2px\",\n                          border: \"2px solid red\",\n                          borderRadius: \"5px\",\n                        }}\n                      >\n                        <WarningIcon sx={{ mr: 1 }} />\n                        Allocated CTB is greater than total quantity to be built\n                      </div>\n                    )}\n                  </div>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      borderBottom: \"1px solid #E4E4E4\",\n                    }}\n                  >\n                    <div style={{ flex: 1, borderRight: \"1px solid #E4E4E4\" }}>\n                      <TableContainer>\n                        <Table size=\"small\" aria-label=\"a dense table\">\n                          <TableHead\n                            sx={{\n                              fontWeight: \"600\",\n                              fontSize: \"13px\",\n                              backgroundColor: \"#0077B611\",\n                            }}\n                          >\n                            <TableRow>\n                              <TableCell\n                                sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                                align=\"center\"\n                              >\n                                Finished Good\n                              </TableCell>\n                              <TableCell\n                                sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                                align=\"center\"\n                              >\n                                CTB\n                              </TableCell>\n                              <TableCell\n                                sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                                align=\"center\"\n                              >\n                                Quantity to build\n                              </TableCell>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            <TableRow\n                              sx={{\n                                \"&:last-child td, &:last-child th\": {\n                                  border: 0,\n                                },\n                              }}\n                            >\n                              <TableCell align=\"center\">\n                                {partDetails?.Parentitem}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {partDetails?.parent_ctb}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {partDetails?.req_ctb}\n                              </TableCell>\n                            </TableRow>\n                          </TableBody>\n                        </Table>\n                      </TableContainer>\n                    </div>\n                    <div style={{ flex: 2 }}>\n                      <div>\n                        <TableContainer>\n                          <Table size=\"small\" aria-label=\"a dense table\">\n                            <TableHead\n                              sx={{\n                                backgroundColor: \"#0077B611\",\n                              }}\n                            >\n                              <TableRow>\n                                <TableCell\n                                  sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                                  align=\"center\"\n                                >\n                                  Part\n                                </TableCell>\n                                <TableCell\n                                  sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                                  align=\"center\"\n                                >\n                                  Cost\n                                </TableCell>\n                                <TableCell\n                                  sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                                  align=\"center\"\n                                >\n                                  QPA\n                                </TableCell>\n                                <TableCell\n                                  sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                                  align=\"center\"\n                                >\n                                  QOH\n                                </TableCell>\n                                <TableCell\n                                  sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                                  align=\"center\"\n                                >\n                                  Allocated CTB\n                                </TableCell>\n                              </TableRow>\n                            </TableHead>\n                            <TableBody>\n                              <TableRow\n                                sx={{\n                                  \"&:last-child td, &:last-child th\": {\n                                    border: 0,\n                                  },\n                                }}\n                              >\n                                <TableCell align=\"center\">\n                                  {partDetails?.item}\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                  {partDetails?.cost_of_part}\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                  {partDetails?.QPA}\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                  {partDetails?.QOH}\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                  {AllocatedCTB}\n                                </TableCell>\n                              </TableRow>\n                            </TableBody>\n                          </Table>\n                        </TableContainer>\n                      </div>\n                      <div>\n                        <TableContainer>\n                          <Table size=\"small\" aria-label=\"a dense table\">\n                            <TableHead\n                              sx={{\n                                backgroundColor: \"#0077B611\",\n                              }}\n                            >\n                              <TableRow>\n                                <TableCell\n                                  sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                                  align=\"center\"\n                                >\n                                  Choose Alternative\n                                </TableCell>\n                                <TableCell\n                                  sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                                  align=\"center\"\n                                >\n                                  Rank\n                                </TableCell>\n                                <TableCell\n                                  sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                                  align=\"center\"\n                                >\n                                  Cost\n                                </TableCell>\n                                <TableCell\n                                  sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                                  align=\"center\"\n                                >\n                                  QPA\n                                </TableCell>\n                                <TableCell\n                                  sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                                  align=\"center\"\n                                >\n                                  QOH\n                                </TableCell>\n                                <TableCell\n                                  sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                                  align=\"center\"\n                                >\n                                  Allocated Qty\n                                </TableCell>\n                                <TableCell\n                                  sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                                  align=\"center\"\n                                >\n                                  Allocated CTB\n                                </TableCell>\n                              </TableRow>\n                            </TableHead>\n                            <TableBody>\n                              {alterNativeParts?.length > 0 ? (\n                                <>\n                                  {alterNativeParts?.map((altpart) => (\n                                    <AlternativeTableRow\n                                      key={altpart?.Alternate_item}\n                                      altpart={altpart}\n                                      lockAlternative={lockAlternative}\n                                      handleAlternatePartsDetails={\n                                        handleAlternatePartsDetails\n                                      }\n                                    />\n                                  ))}\n                                </>\n                              ) : (\n                                <TableRow>\n                                  <TableCell\n                                    colSpan={7}\n                                    align=\"center\"\n                                    sx={{\n                                      fontWeight: \"600\",\n                                      fontSize: \"15px\",\n                                      padding: \"20px\",\n                                    }}\n                                  >\n                                    No Alternative records found\n                                  </TableCell>\n                                </TableRow>\n                              )}\n                            </TableBody>\n                          </Table>\n                        </TableContainer>\n                      </div>\n                    </div>\n                  </div>\n                  {!lockAlternative && (\n                    <div\n                      style={{\n                        padding: \"10px 20px\",\n                        display: \"flex\",\n                        justifyContent: \"flex-end\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Stack\n                        sx={{ alignItems: \"center\" }}\n                        direction=\"row\"\n                        spacing={4}\n                      >\n                        <div\n                          onClick={() => {\n                            getAlternativeAndEntangled();\n                            setAllocatedCTBAlternative(0);\n                          }}\n                          style={{\n                            padding: \"2px\",\n                            cursor: \"pointer\",\n                            border: \"1px solid #0077B6\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            borderRadius: \"5px\",\n                          }}\n                        >\n                          <ReplayIcon />\n                        </div>\n                      </Stack>\n                    </div>\n                  )}\n                  <div\n                    style={{\n                      padding: \"15px\",\n                      fontSize: \"15px\",\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      borderTop: \"1px solid #E4E4E4\",\n                    }}\n                  >\n                    <div style={{ color: \"#EA8600\" }}>Allocate CTB</div>\n                    <div style={{ fontSize: \"16px\" }}>\n                      Avail. Parts : {partQOH}\n                    </div>\n                    <div style={{ fontSize: \"16px\" }}>QOH : {remainingQoh}</div>\n                    <div>\n                      {parseInt(partQOH) !==\n                        parseInt(partDetails?.totalAvailableParts) && (\n                        <div\n                          style={{\n                            color: \"red\",\n                            fontSize: \"14px\",\n                            fontWeight: \"500\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            padding: \"2px\",\n                            border: \"2px solid red\",\n                            borderRadius: \"5px\",\n                          }}\n                        >\n                          <WarningIcon sx={{ mr: 1 }} />\n                          Total avail. parts is not matching with database\n                        </div>\n                      )}\n                      {parseInt(remainingQoh) < 0 && (\n                        <div\n                          style={{\n                            color: \"red\",\n                            fontSize: \"14px\",\n                            fontWeight: \"500\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            padding: \"2px\",\n                            border: \"2px solid red\",\n                            borderRadius: \"5px\",\n                          }}\n                        >\n                          <WarningIcon sx={{ mr: 1 }} />\n                          Allocated CTB is greater than QOH/QPA\n                        </div>\n                      )}\n                      {parseInt(AllocatedCTB) >\n                        parseInt(partDetails?.req_ctb) && (\n                        <div\n                          style={{\n                            color: \"red\",\n                            fontSize: \"14px\",\n                            fontWeight: \"500\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            padding: \"2px\",\n                            border: \"2px solid red\",\n                            borderRadius: \"5px\",\n                          }}\n                        >\n                          <WarningIcon sx={{ mr: 1 }} />\n                          Allocated CTB is greater than Quantity to build\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  <div>\n                    <TableContainer>\n                      <Table size=\"small\" aria-label=\"a dense table\">\n                        <TableHead\n                          sx={{\n                            backgroundColor: \"#0077B611\",\n                          }}\n                        >\n                          <TableRow>\n                            <TableCell\n                              sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                              align=\"center\"\n                            >\n                              Finished Good\n                            </TableCell>\n                            <TableCell\n                              sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                              align=\"center\"\n                            >\n                              CTB\n                            </TableCell>\n                            <TableCell\n                              sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                              align=\"center\"\n                            >\n                              Potential CTB\n                            </TableCell>\n                            <TableCell\n                              sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                              align=\"center\"\n                            >\n                              Quantity to build\n                            </TableCell>\n                            <TableCell\n                              sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                              align=\"center\"\n                            >\n                              QPA\n                            </TableCell>\n                            <TableCell\n                              sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                              align=\"center\"\n                            >\n                              Allocated Part Qty\n                            </TableCell>\n                            <TableCell\n                              sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                              align=\"center\"\n                            >\n                              Allocated CTB\n                            </TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          <TableRow\n                            sx={{\n                              \"&:last-child td, &:last-child th\": { border: 0 },\n                            }}\n                          >\n                            <TableCell align=\"center\">\n                              {partDetails?.Parentitem}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              {partDetails?.parent_ctb}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              {partDetails?.parent_potential_ctb}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              {partDetails?.req_ctb}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              {partDetails?.QPA}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              {reAllocatedQuantity}\n                            </TableCell>\n                            <TableCell\n                              align=\"center\"\n                              sx={{\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                              }}\n                            >\n                              <TextField\n                                type=\"text\"\n                                disabled={lockAlternative}\n                                value={AllocatedCTB}\n                                error={error}\n                                helperText={error && errorText}\n                                onChange={(e) => {\n                                  setAllocatedCTB(e.target.value);\n                                  handleEntangledFGDetails(\n                                    e,\n                                    partDetails?.Parentitem\n                                  );\n                                  setReAllocatedQuantity(\n                                    e.target.value * partDetails?.QPA\n                                  );\n                                  handleValidate(e.target.value);\n                                }}\n                                sx={{ width: \"120px\" }}\n                                placeholder=\"\"\n                                size=\"small\"\n                              />\n                            </TableCell>\n                          </TableRow>\n                        </TableBody>\n                      </Table>\n                    </TableContainer>\n                  </div>\n                </Paper>\n              ))}\n            {entangledFGData?.length > 0 && (\n              <Paper\n                sx={{\n                  width: \"100%\",\n                  marginTop: \"15px\",\n                  overflow: \"hidden\",\n                  boxShadow: \"none\",\n                  border: \"1px solid #9F9F9F\",\n                  borderRadius: \"5px\",\n                }}\n              >\n                <div\n                  style={{\n                    padding: \"15px\",\n                    fontSize: \"15px\",\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  <div style={{ color: \"#EA8600\" }}>\n                    Reallocate quantity to solve entanglement\n                  </div>\n                  <div style={{ fontSize: \"16px\" }}>\n                    Avail. Parts : {partQOH}\n                  </div>\n                  <div style={{ fontSize: \"16px\" }}>QOH : {remainingQoh}</div>\n                  <div>\n                    {parseInt(remainingQoh) < 0 && (\n                      <div\n                        style={{\n                          color: \"red\",\n                          fontSize: \"14px\",\n                          fontWeight: \"500\",\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          padding: \"2px\",\n                          border: \"2px solid red\",\n                          borderRadius: \"5px\",\n                        }}\n                      >\n                        <WarningIcon sx={{ mr: 1 }} />\n                        Reallocated Quantity is greater than QOH\n                      </div>\n                    )}\n                    {parseInt(AllocatedCTB) >\n                      parseInt(partDetails?.req_ctb) && (\n                      <div\n                        style={{\n                          color: \"red\",\n                          fontSize: \"14px\",\n                          fontWeight: \"500\",\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          padding: \"2px\",\n                          border: \"2px solid red\",\n                          borderRadius: \"5px\",\n                        }}\n                      >\n                        <WarningIcon sx={{ mr: 1 }} />\n                        Allocated CTB is greater than Quantity to build\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div>\n                  <TableContainer>\n                    <Table size=\"small\" aria-label=\"a dense table\">\n                      <TableHead\n                        sx={{\n                          backgroundColor: \"#0077B611\",\n                        }}\n                      >\n                        <TableRow>\n                          <TableCell\n                            sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                            align=\"center\"\n                          >\n                            Finished Good\n                          </TableCell>\n                          <TableCell\n                            sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                            align=\"center\"\n                          >\n                            CTB\n                          </TableCell>\n                          <TableCell\n                            sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                            align=\"center\"\n                          >\n                            Potential CTB\n                          </TableCell>\n                          <TableCell\n                            sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                            align=\"center\"\n                          >\n                            Quantity to build\n                          </TableCell>\n                          <TableCell\n                            sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                            align=\"center\"\n                          >\n                            QPA\n                          </TableCell>\n                          <TableCell\n                            sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                            align=\"center\"\n                          >\n                            Allocated Part Qty\n                          </TableCell>\n                          <TableCell\n                            sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                            align=\"center\"\n                          >\n                            Allocated CTB\n                          </TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        <TableRow\n                          sx={{\n                            \"&:last-child td, &:last-child th\": { border: 0 },\n                          }}\n                        >\n                          <TableCell align=\"center\">\n                            {partDetails?.Parentitem}\n                          </TableCell>\n                          <TableCell align=\"center\">\n                            {\n                              entangledFGData.find(\n                                (item) => item.FG === partDetails.Parentitem\n                              )?.ctb\n                            }\n                          </TableCell>\n                          <TableCell align=\"center\">\n                            {\n                              entangledFGData.find(\n                                (item) => item.FG === partDetails.Parentitem\n                              )?.potential_ctb\n                            }\n                          </TableCell>\n                          <TableCell align=\"center\">\n                            {partDetails?.req_ctb}\n                          </TableCell>\n                          <TableCell align=\"center\">\n                            {partDetails?.QPA}\n                          </TableCell>\n                          <TableCell align=\"center\">\n                            {reAllocatedQuantity}\n                          </TableCell>\n                          <TableCell\n                            align=\"center\"\n                            sx={{\n                              display: \"flex\",\n                              alignItems: \"center\",\n                              justifyContent: \"center\",\n                            }}\n                          >\n                            <TextField\n                              type=\"text\"\n                              error={error}\n                              helperText={error && errorText}\n                              disabled={lockAlternative}\n                              value={AllocatedCTB}\n                              onChange={(e) => {\n                                setAllocatedCTB(e.target.value);\n                                handleEntangledFGDetails(\n                                  e,\n                                  partDetails?.Parentitem\n                                );\n                                setReAllocatedQuantity(\n                                  e.target.value * partDetails?.QPA\n                                );\n                                handleValidate(e.target.value);\n                              }}\n                              sx={{ width: \"120px\" }}\n                              placeholder=\"\"\n                              size=\"small\"\n                            />\n                          </TableCell>\n                        </TableRow>\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                </div>\n                <div>\n                  <TableContainer>\n                    <Table size=\"small\" aria-label=\"a dense table\">\n                      <TableHead\n                        sx={{\n                          backgroundColor: \"#0077B611\",\n                        }}\n                      >\n                        <TableRow>\n                          <TableCell\n                            sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                            align=\"center\"\n                          >\n                            Entangled Finished Good ({entangledFGData?.length})\n                          </TableCell>\n                          <TableCell\n                            sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                            align=\"center\"\n                          >\n                            CTB\n                          </TableCell>\n                          <TableCell\n                            sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                            align=\"center\"\n                          >\n                            Potential CTB\n                          </TableCell>\n                          <TableCell\n                            sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                            align=\"center\"\n                          >\n                            Quantity to build\n                          </TableCell>\n                          <TableCell\n                            sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                            align=\"center\"\n                          >\n                            QPA\n                          </TableCell>\n                          <TableCell\n                            sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                            align=\"center\"\n                          >\n                            Allocated Part Qty\n                          </TableCell>\n                          <TableCell\n                            sx={{ fontWeight: \"600\", fontSize: \"13px\" }}\n                            align=\"center\"\n                          >\n                            Allocated CTB\n                          </TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {entangledFGData?.length > 0 ? (\n                          <>\n                            {entangledFGData\n                              .filter(\n                                (item) => item.FG !== partDetails.Parentitem\n                              )\n                              .map((entfg, index) => (\n                                <EntangledFGTableRow\n                                  key={index}\n                                  entfg={entfg}\n                                  QPA={partDetails?.QPA}\n                                  lockAlternative={lockAlternative}\n                                  handleEntangledFGDetails={\n                                    handleEntangledFGDetails\n                                  }\n                                  remainingQoh={remainingQoh}\n                                />\n                              ))}\n                          </>\n                        ) : (\n                          <TableRow>\n                            <TableCell colSpan={6}>no records found</TableCell>\n                          </TableRow>\n                        )}\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                </div>\n                {!lockAlternative && (\n                  <div\n                    style={{\n                      padding: \"10px 20px\",\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Stack\n                      sx={{ alignItems: \"center\" }}\n                      direction=\"row\"\n                      spacing={4}\n                    >\n                      <div\n                        onClick={() => {\n                          getAlternativeAndEntangled();\n                          setAllocatedCTB(0);\n                        }}\n                        style={{\n                          padding: \"2px\",\n                          cursor: \"pointer\",\n                          border: \"1px solid #0077B6\",\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          borderRadius: \"5px\",\n                        }}\n                      >\n                        <ReplayIcon />\n                      </div>\n                    </Stack>\n                  </div>\n                )}\n              </Paper>\n            )}\n          </>\n        )}\n      </Collapse>\n    </Paper>\n  );\n};\n\nexport default PartsPreview;\n"],"names":["altpart","lockAlternative","handleAlternatePartsDetails","useState","checked","setChecked","error","setError","errorText","setErrorText","sx","border","align","onChange","e","target","disabled","Alternate_item","Alt_Grp_Rnk","cost","qpa","QOH","allocated_qty","value","allocated_ctb","altcbtqoh","parseInt","handleValidate","width","placeholder","size","helperText","name","LightTooltip","styled","className","props","classes","popper","theme","tooltipClasses","backgroundColor","color","boxShadow","zIndex","children","data","title","style","margin","borderRadius","fontWeight","padding","placement","entfg","handleEntangledFGDetails","QPA","remainingQoh","FG","ctb","potential_ctb","req_ctb","type","ctb_qoh","val","regexPattern","test","console","log","partDetails","allParts","setAllParts","useHistory","useContext","FilterContext","filterState","setFilterState","open","setOpen","resolved_flag","setLockAlternative","alterNativeParts","setAlterNativeParts","entangledFGData","setEntangledFGData","allocated_item_ctb","AllocatedCTB","setAllocatedCTB","partQOH","setPartQOH","setResolved_flag","total_alt_item_allocated_ctb","AllocatedCTBAlternative","setAllocatedCTBAlternative","entanglment_flag","find","item","Parentitem","reAllocatedQuantity","setReAllocatedQuantity","qntySum","setQntySum","collapseLoading","setCollapseLoading","getAlternativeAndEntangled","axios","BaseUrl","location","username","String","then","res","msg","alert","entagled_parents_details","alternate_details","length","parentfg","inv_ctb","reduce","sum","fg","catch","err","useEffect","partname","map","part","qohcbt","fgname","allocatedQntEntangled","setAllocatedQntEntangled","setRemainingQoh","entpart","getData","setTimeout","clearTimeout","getFormatedDate","newdate","Date","toLocaleString","split","mdate","updatedPartDetails","setUpdatedPartDetails","total_item_alt_item_allocated_ctb","lockLoading","setLockLoading","overflow","id","display","alignItems","gap","onClick","justifyContent","cursor","fontSize","description","direction","spacing","deficient_flag","height","updatedpart","updatedalternates","updatedentangled","item_QOH","oldQOH","newQOH","deltaQOH","FG_item","summary","parent_item","lastUpdated","fgarray","FGs","includes","push","handleUpdatedFGs","marginLeft","in","timeout","unmountOnExit","marginTop","mr","borderBottom","flex","borderRight","parent_ctb","cost_of_part","colSpan","borderTop","totalAvailableParts","parent_potential_ctb","filter","index"],"sourceRoot":""}